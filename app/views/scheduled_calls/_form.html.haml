= form_for [project, scheduled_call], :remote => true do |f|
  .toptitle
    %span Name
  .middle
    = f.text_field :name, :class => 'w30'
    %p
      = f.label :enabled do
        = f.check_box :enabled
        Enabled
    %p Call flow
    = f.collection_select :call_flow_id, call_flows, :id, :name, {prompt: 'Select a Call flow...'}, {class: 'w30'}
    %p Channel
    = f.collection_select :channel_id, channels, :id, :name, {prompt: 'Select a Channel...'}, {class: 'w30'}
    %p Schedule
    = f.select_recurring :recurrence_rule, [scheduled_call.recurrence_rule], {allow_blank: false}
    %p From
    = f.text_field :from_time_hours, :class => 'w10', :alt => 'time'
    %p To
    = f.text_field :to_time_hours, :class => 'w10', :alt => 'time'

    .not_before
      %p
        = f.label :not_before_enabled do
          = f.check_box :not_before_enabled, :class => 'not_before_enabled'
          Not before enabled
      = f.text_field :not_before_date, :class => "ux-datepicker w10 not_before_date"
      = f.text_field :not_before_time, :class => 'w10 not_before_time', :alt => 'time'
    .not_after
      %p
        = f.label :not_after_enabled do
          = f.check_box :not_after_enabled, :class => 'not_after_enabled'
          Not after enabled
      = f.text_field :not_after_date, :class => "ux-datepicker w10 not_after_date"
      = f.text_field :not_after_time, :class => 'w10 not_after_time', :alt => 'time'

    %p Time zone
    = f.time_zone_select :time_zone, nil, default: project.time_zone

    %p Filters
    = f.hidden_field :filters_json, 'data-bind' => 'value: json', 'class' => 'filters'
    %ul{'data-bind' => 'foreach: filters'}
      %li
        %select{'data-bind' => "options: window.variables, optionsText: 'name', value: variable"}
        %select{'data-bind' => "options: operators, optionsText: 'text', value: operator"}
        %select{'data-bind' => "options: other_types, value: other_type"}
        / ko if: other_type() == 'value'
        %input{'type' => 'text', 'data-bind' => 'value: value'}
        / /ko
        / ko if: other_type() == 'variable'
        %select{'data-bind' => "options: window.variables, optionsText: 'name', value: other_variable"}
        / /ko
    %button{'data-bind' => 'click: addFilter'} Add filter
  %hr
  - if scheduled_call.new_record?
    %button.white{:type => "submit"} Save
  - else
    %button.white{:type => "submit"} Update
  = link_to 'Cancel', '#', :class => "tgrey #{scheduled_call.new_record? ? 'remove_unsaved_element' : 'collapse_trigger'}", :style => 'top: 1px;'
